==> If you want to execute @BeforeClass and @AfterClass then you have to mention it in seprate class if there are multiple classes.

========================================================================================================================================

## Program with @BeforeTest, @BeforeClass @Test @AfterClass @AfterTest Combination.
====================================================================================


==========> Class 1 

package TestAnnotationPractice;

import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TC1 {

	@BeforeTest
	public void openDB() {
		System.out.println("DB is opened.");
	}
	
	@AfterTest
	public void closeDB() {
		System.out.println("DB is closed");
	}
	
	@BeforeClass
	public void openbrowser() {
		System.out.println("Browser is opened");
	}
	
	@AfterClass
	public void closebrowser() {
		System.out.println("Browser is closed");
	}
	
	@Test
	public void m1() {
		System.out.println("This is m1 method");
	}
	
	@Test
	public void m2() {
		System.out.println("This is m2 method");
	}
	
	@Test
	public void m3() {
		System.out.println("This is m3 method");
	}
	
}


==========> Class 2 

package TestAnnotationPractice;

import org.testng.annotations.Test;

public class TC2 {

	@BeforeClass
	public void openbrowser() {
		System.out.println("Browser is opened");
	}
	
	@AfterClass
	public void closebrowser() {
		System.out.println("Browser is closed");
	}

	@Test
	public void m4() {
		System.out.println("This is m4 method");
	}
	
	
	@Test
	public void m5() {
		System.out.println("This is m5 method");
	}
	
	@Test
	public void m6() {
		System.out.println("This is m6 method");
	}
}



Note:- It is not necessary you should use @Before and @After annotation in pair. You can use it indivisually as and when required.



Creating the Xml file:- 
=============================================================================================================================

==> In TestNG xml file can be created by using two ways:- 

	1. Create Manually
	2. Create Automatically.

==> To Create Xml File Automatically.

--> Select a class or package you want to run.
--> Right Cick
--> Go to TestNG
--> Convert to TestNG
--> Give Suitable Name
--> Genrate the Xml File.
--> Right Click on the xml file and run as testng suite.


==> You can create any number of .xml files and give proper nomenclature.
==> Refresh the project always before checking the testng reports.