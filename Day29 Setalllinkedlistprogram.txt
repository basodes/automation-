Set:- 
=========================================================================================
=> Doesnot allow duplicate values.
=> Can accepts only one null value except treeset
=> random insertion of data except Linked Hashset.


Hashset:- 
============================================================================================
=> Doesnot allow duplicate value.
=> can save only one null value.
=> Random order of insertion
=> Order of insertion is not important.


Linked Hashset:- 
============================================================================================
=> Doesnot allow duplicate value.
=> order of insertion must be maintained.
=> accepts only one null value.

TreeSet:- 
===============================================================================================
=> Doesnot allow duplicate value
=> Null values are not accepted
=> Data arranged in assending order.




# Program for LinkedList 
=================================================================================================
public class LinkedListExample {
	public static void main(String[] args) {
		LinkedList ll = new LinkedList();
		ll.add(15);  // 0
		ll.add("ABC"); //1
		ll.add('c');  //2
		ll.add(15);   //3  
		
		// to see the elements
		System.out.println(ll);
		System.out.println("Containts method "+ll.contains('Z'));
		ll.add(2, "PQR");
		System.out.println(ll);
		ll.remove("PQR");
		System.out.println(ll);
		// checking the size
		System.out.println("the size  is " + ll.size());
		System.out.println(ll.get(1));
		// iterate it.
//		Iterator itr = ll.iterator();
//		
//		while (itr.hasNext()) {
//			System.out.println(itr.next());
//		}
//		
		
		//  these methods are not available arraylist or vector 
		// getfirst, getlast, add first, add last, removefirst, removelastt
		
		
		System.out.println("the first element is " + ll.getFirst());
		System.out.println("the last element is " + ll.getLast());
		ll.addFirst("java");
		ll.addLast("python");
		System.out.println(ll);
		
		ll.removeFirst();
		ll.removeLast();
		System.out.println(ll);
	}
	
}



# Progarm for Hashset
================================================================================================================================

public static void main(String[] args) {
		HashSet  <String> s = new HashSet <String>();
		s.add("one");
		s.add("two");
		s.add("three");
		s.add("four");
		s.add("five");
		s.add("one");
		s.add(null);
		System.out.println(s);
		
		ArrayList <String> al = new ArrayList <String>();
		al.add("five");
		al.add("six");
		al.add("seven");
		al.add("eight");
		al.add("nine");
		al.add("ten");
		System.out.println(al);
		s.addAll(al);
		System.out.println(s);
		Iterator itr = s.iterator();
		while (itr.hasNext()) {
			System.out.println(itr.next());
		}
		
	}
	
}



